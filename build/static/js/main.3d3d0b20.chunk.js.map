{"version":3,"sources":["Assets/landing_splash.jpg","services/token-service.js","components/Common/Footer.js","contexts/ProjectListContext.js","config.js","components/Common/MenuContent.js","contexts/UserContext.js","components/Common/Header.js","Routes/PrivateOnlyRoute.js","components/ProjectListItem/ProjectListItem.js","components/ProjectList/ProjectList.js","pages/HomePage.js","contexts/ProjectContext.js","components/TaskListItem/TaskListItem.js","components/TaskList/TaskList.js","components/MemberList/MemberList.js","pages/ProjectPage.js","pages/TaskPage.js","components/SideMenu/SideMenu.js","components/CreateTask/CreateTask.js","components/CreateProject/CreateProjectForm.js","components/UpdateProject/UpdateProject.js","components/Lists/MyOpenTasks.js","components/Lists/MyCreatedTasks.js","components/Lists/MyCompletedTasks.js","Routes/PrivateRoutes.js","pages/LandingPage.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js","components/LoginForm/LoginForm.js","pages/LoginPage.js","Routes/PublicRoutes.js","Routes/PublicOnlyRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","_timeoutId","Footer","react_default","a","createElement","href","target","rel","React","Component","ProjectListContext","createContext","projectList","error","setError","clearError","setProjectList","ProjectListProvider","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","setState","console","inherits","createClass","key","value","Provider","props","children","config","API_ENDPOINT","process","API_LOCAL_ENDPOINT","TOKEN_KEY","API_KEY","TokenService","saveAuthToken","token","window","sessionStorage","setItem","getAuthToken","getItem","clearAuthToken","info","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","parseJwt","jwt","jwtDecode","readJwtToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","MenuContent","_this2","fetch","method","headers","authorization","then","res","ok","json","e","Promise","reject","resJson","log","map","project","react_router_dom","to","project_id","className","name","renderProjectList","contextType","UserContext","userLoggedIn","setUserLoggedInTrue","setUserLoggedInFalse","UserProvider","_Component","Header","handleLogoutClick","context","menuOpen","onClick","HamburgerMenu_default","isOpen","menuClicked","handleClick","bind","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","cheeseburger_menu_default","closeCallback","closeMenu","MenuContent_MenuContent","Fragment","renderLogoutLinkAndMenuButton","renderLoginLink","PrivateRoute","_ref","component","objectWithoutProperties","react_router","assign","render","componentProps","pathname","from","location","ProjectListItem","ProjectList","catch","_this$context$project","ProjectListItem_ProjectListItem","renderProjects","HomePage","joinProjects","joinProjectSelected","handleJoinGroup","preventDefault","joinProjectName","filter","id","fetchProjectList","handleJoinProjectSelectChange","ProjectList_ProjectList_ProjectList","onSubmit","onChange","list","type","ProjectContext","tasks","members","setProject","clearProject","setTasks","addTask","updateProject","setMembers","ProjectProvider","task","toConsumableArray","TaskListItem","TaskList","TaskListItem_TaskListItem_TaskListItem","renderTasks","MemberList","memberList","member","first_name","last_name","ProjectPage","prevProps","match","params","all","_ref2","slicedToArray","res1","res2","res3","_ref3","_ref4","res1Json","res2Json","res3Json","_this3","_ref5","_ref6","_ref7","_ref8","_this4","uncompletedTasks","completed_by","description","TaskList_TaskList_TaskList","MemberList_MemberList_MemberList","history","goBack","TaskPage","handleInputChange","_this$setState","defineProperty","handleChangeMember","assignedTo","_memberObject$","assigned_to_id","assigned_to_first_name","assigned_to_last_name","formUpdated","handleSave","_this$state","task_name","task_description","task_due_date","task_id","content-type","body","JSON","stringify","due_date","assigned_to","fetchTasks","formSaved","handleCompleteTask","created_by_id","created_first_name","created_last_name","date_completed","completed_by_id","completed_by_first_name","completed_by_last_name","_this$state2","Moment","format","_this$state3","placeholder","required","renderComplete","SideMenu","CreateTask","handleCreateTask","_e$target","new_task_name","new_task_due_date","new_task_description","new_task_assigned_to","assignedTo_id","CreateProjectForm","errorProjectName","handleSubmitCreateProject","project_name","project_description","status","message","refreshError","onFocus","UpdateProject","handleUpdateProject","handleChangeName","handleChangeDescription","MyOpenTasks","myOpenTasks","MyCreatedTasks","myCreatedTasks","MyCompletedTasks","myCompletedTasks","t","PrivateRoutes","SideMenu_SideMenu_SideMenu","path","exact","CreateProject","LandingPage","RegisterForm","errorPassword","errorFirstName","errorLastName","errorEmail","validatePassword","result","startsWith","endsWith","test","validateFirstName","firstName","validateLastName","lastName","validateEmail","email","validateConfirmPassword","confirmPassword","handleSubmit","ev","_ev$target","user","push","errorFirst","RegisterPage","RegisterForm_RegisterForm_RegisterForm","LoginForm","handleLogin","authToken","onLoginSuccess","demoUserLogin","role","defaultProps","LoginPage","handleLoginSuccess","_this$props","destination","LoginForm_LoginForm","PublicRoutes","PublicOnlyRoute","App","includes","Header_Header","Footer_Footer","Boolean","hostname","ReactDOM","UserContext_UserProvider","ProjectListContext_ProjectListProvider","ProjectContext_ProjectProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d3d0b20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing_splash.559930d4.jpg\";","import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.sessionStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.sessionStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    console.info('clearing the auth token')\n    window.sessionStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  readJwtToken() {\n    return TokenService.parseJwt(TokenService.getAuthToken())\n  },\n  _getMsUntilExpiry(payload) {\n    /*\n      payload is from the JWT\n      the `exp` value is in seconds, need to convert to ms, so * 1000\n      calculates the difference between now and when the JWT will expire\n    */\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    /* get the number of ms from now until the token expires */\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.readJwtToken()\n    )\n    /*\n      queue a callback that will happen 10 seconds before the token expires\n      the callback is passed in as an argument so could be anything,\n        in this app, the callback is for calling the refresh endpoint\n    */\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n","import React from 'react'\nimport './Footer.css'\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                &copy; <a href='https://www.linkedin.com/in/ryuta-eguchi-47371982' target='_blank' rel=\"noopener noreferrer\">Ryuta Eguchi 2019</a> \n            </footer>\n        )\n    }\n}","import React from 'react'\n\nconst ProjectListContext = React.createContext({\n    projectList: [],\n    error: null,\n    setError: () => {},\n    clearError: () => {},\n    setProjectList: () => {}\n})\n\nexport default ProjectListContext\n\nexport class ProjectListProvider extends React.Component {\n    state = {\n        projectList: [],\n        error: null\n    }\n\n    setProjectList = projectList => {\n        this.setState({ projectList })\n    }\n\n    setError = error => {\n        console.error(error)\n        this.setState({ error })\n      }\n    \n    clearError = () => {\n    this.setState({ error: null })\n    }\n\n    render() {\n        const value = {\n            projectList: this.state.projectList,\n            error: this.state.error,\n            setError: this.setError,\n            clearError: this.clearError,\n            setProjectList: this.setProjectList\n        }\n        return (\n            <ProjectListContext.Provider value={value}>\n                {this.props.children}\n            </ProjectListContext.Provider>\n        )\n    }\n}","export default {\n    API_ENDPOINT: process.env.REACT_APP_API_BASE_URL ||\n    \"http://localhost:8000/api\",\n    API_LOCAL_ENDPOINT: `http://localhost:8000/api`,\n    TOKEN_KEY: 'todueby-key', \n    API_KEY: process.env.REACT_APP_API_KEY\n}\n  ","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ProjectListContext from '../../contexts/ProjectListContext'\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\nimport './MenuContent.css'\n\nexport default class MenuContent extends React.Component {\n    static contextType = ProjectListContext\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectList: [],\n            error: null\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/projects/`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n        )\n        .then(resJson => {\n            console.log(resJson)\n            this.setState({\n                projectList: resJson\n            })\n        })  \n    }\n\n    renderProjectList() {\n        const { projectList } = this.state\n        return (\n            projectList.map(project => {\n                return (\n                    <Link to={`/project/${project.project_id}`}>\n                        <div className='menu_item'>\n                            {project.name}\n                        </div>\n                    </Link>\n                )\n            })\n        )\n    }\n\n    render() {\n        return (\n            <section className='menu-content'>\n                <i className=\"fas fa-clipboard-list\"></i>\n                <p className='menu_section_header'>ToDueBy</p>\n                <Link to='/dashboard'>\n                    <div className='menu_item'>Home</div>\n                </Link>\n                <Link to='/lists/myopentasks'>\n                    <div className='menu_item'>My Tasks</div>\n                </Link>\n                <div className='menu_section'>\n                    <div className='menu_section_header'>Lists</div>\n                    <Link to='/lists/mycreatedtasks'>\n                        <div className='menu_item'>Tasks I've Created</div>\n                    </Link>\n                    <Link to='/lists/mycompletedtasks'>\n                        <div className='menu_item'>Tasks I've Completed</div>\n                    </Link>\n                </div>    \n                <div className='menu_section'>\n                    <div className='menu_section_header'>Projects</div>\n                    {this.renderProjectList()}\n                </div>\n                \n\n            </section>\n        )\n    }\n}","import React, { Component } from 'react'\n\nconst UserContext = React.createContext({\n  userLoggedIn: null,\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setUserLoggedInTrue: () => {},\n  setUserLoggedInFalse: () => {}\n})\nexport default UserContext\n\nexport class UserProvider extends Component {\n  state = {\n    userLoggedIn: false,\n    error: null,\n  };\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n  setUserLoggedInTrue = () => {\n    this.setState({ userLoggedIn: true })\n  }\n  setUserLoggedInFalse = () => {\n    this.setState({ userLoggedIn: false })\n  }\n\n\n  render() {\n    const value = {\n      userLoggedIn: this.state.userLoggedIn,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setUserLoggedInTrue: this.setUserLoggedInTrue,\n      setUserLoggedInFalse: this.setUserLoggedInFalse\n    }\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport CheeseburgerMenu from 'cheeseburger-menu'\nimport HamburgerMenu from 'react-hamburger-menu'\nimport MenuContent from './MenuContent'\nimport TokenService from '../../services/token-service';\nimport UserContext from '../../contexts/UserContext'\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n          menuOpen: false,\n        }\n    }\n\n    static contextType = UserContext\n  \n    openMenu() {\n      this.setState({ menuOpen: true })\n    }\n  \n    closeMenu() {\n      this.setState({ menuOpen: false })\n    }\n    handleClick() {\n        this.setState({\n            menuOpen: !this.state.menuOpen\n        });\n    }\n\n    handleLogoutClick = () => {\n        TokenService.clearAuthToken()\n        this.context.setUserLoggedInFalse()\n    }\n      \n    renderLogoutLinkAndMenuButton() {\n        return (\n        <li className='header_link'>\n            <Link\n            onClick={this.handleLogoutClick}\n            to='/'>\n            Logout\n            </Link>\n            <div className='menu_button'>\n                <HamburgerMenu \n                isOpen={this.state.menuOpen}\n                menuClicked={this.handleClick.bind(this)}\n                width={18}\n                height={15}\n                strokeWidth={1}\n                rotate={0}\n                color='white'\n                borderRadius={0}\n                animationDuration={0.5}\n                />\n            </div>\n                <CheeseburgerMenu\n                    isOpen={this.state.menuOpen}\n                    closeCallback={this.closeMenu.bind(this)}>\n                    <MenuContent closeCallback={this.closeMenu.bind(this)}/>\n                </CheeseburgerMenu>\n        </li>\n        )\n    }\n      \n    renderLoginLink() {\n        return (\n        <>\n            <li className='header_link'><Link to='/login'>Login</Link></li>\n            <li className='header_link'><Link to='/register'>Register</Link></li>\n        </>\n        )\n    }\n    \n    render() {\n        return (\n            <header>\n                <Link to='/dashboard'>\n                    <p className='title'>ToDueBy</p>\n                </Link>\n                <div className='navbar'>\n                    <nav className='navbar'>\n                        <ul>\n                            <li className='header_link'><Link to='/dashboard'>Home</Link></li>\n                            {TokenService.hasAuthToken()\n                            ? this.renderLogoutLinkAndMenuButton()\n                            : this.renderLoginLink()}\n                        </ul>\n                    </nav>\n                </div>\n\n            </header>\n        )\n    }\n}\n\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../services/token-service'\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Component {...componentProps} />\n          : <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: componentProps.location }\n              }}\n            />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class ProjectListItem extends React.Component {\n    render() {\n        const { project } = this.props\n        return (\n            <Link to={`/project/${project.project_id}`}>\n                <div className='ProjectListItem'>\n                    <p className='project_title'>\n                        {project.name}\n                    </p>\n                </div>\n            </Link>\n        )\n    }\n}","import React from 'react'\nimport ProjectListContext from '../../contexts/ProjectListContext'\nimport TokenService from '../../services/token-service'\nimport ProjectListItem from '../ProjectListItem/ProjectListItem'\nimport config from '../../config'\nimport './ProjectList.css'\n\nexport default class ProjectList extends React.Component {\n    static contextType = ProjectListContext\n\n    componentDidMount() {\n        this.context.clearError()\n        fetch(`${config.API_ENDPOINT}/projects`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )\n        .then(this.context.setProjectList)\n        .catch(this.context.setError)\n    }\n\n    renderProjects() {\n        const { projectList = [] } = this.context\n        return projectList.map(project => \n            <ProjectListItem\n                key={project.project_id}\n                project={project}\n            />\n        )\n    }\n\n    render() {\n        const { error } = this.context\n        return (\n            <section className='ProjectList'>\n            {error\n                ? <p className='red'>There was an error, try again</p>\n                : this.renderProjects()}\n            </section>\n        )\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ProjectList from '../components/ProjectList/ProjectList'\nimport config from '../config';\nimport TokenService from '../services/token-service'\nimport ProjectListContext from '../contexts/ProjectListContext'\n\nexport default class HomePage extends React.Component {\n  static contextType = ProjectListContext\n  state = {\n    joinProjects: [],\n    joinProjectSelected: null,\n    error: null\n  }\n\n  componentDidMount() {\n    fetch(`${config.API_ENDPOINT}/projects/project/join`, {\n      method: 'GET',\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },    \n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json()\n    )\n    .then(resJson => {\n      this.setState({joinProjects: resJson})\n    }) \n    .catch(error => this.setState({ error }))\n  }\n\n  handleJoinGroup = e => {\n    e.preventDefault()\n    const joinProjectName = e.target.project.value\n    const projectObject = this.state.joinProjects.filter(project => \n      project.name === joinProjectName\n      )\n    const project_id = projectObject[0].id\n    fetch(`${config.API_ENDPOINT}/projects/join/${project_id}`, {\n      method: 'POST',\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json()\n    )\n    .then(this.fetchProjectList)\n    .catch(error => this.setState({ error }))\n  }\n\n  fetchProjectList = () => {\n    fetch(`${config.API_ENDPOINT}/projects`, {\n      method: 'GET',\n      headers: {\n          'authorization': `bearer ${TokenService.getAuthToken()}`,\n      }\n    })\n    .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n    )\n    .then(this.context.setProjectList)\n    .catch(this.context.setError)\n  }\n\n  handleJoinProjectSelectChange = e => {\n    const project = e.target.value\n    this.setState({\n      joinProjectSelected: project\n    })\n  }\n\n  render() {\n    const {joinProjectSelected} = this.state\n    return (\n      <div className='home-page'>\n        <p className='title'>Home Page</p>\n        <h3>Projects</h3>\n        <ProjectList/>\n        <Link to='/project-create' className='project_create'>\n          <button className='add_button'>Create Project</button>\n        </Link>\n        <form onSubmit={this.handleJoinGroup} onChange={this.handleJoinProjectSelectChange}>\n          <label>\n            Join Project\n          </label>\n            <select name='project' list='projects' >\n            <option key='9999' value=''/>\n            {this.state.joinProjects.map(project => {\n              return <option key={project.id} value={`${project.name}`}>{project.name}</option>\n            })}\n   \n            </select>\n          \n          {joinProjectSelected && <button type='submit'>\n            Join\n          </button>\n          }\n        </form>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\n\n\nconst ProjectContext = React.createContext({\n    project: [],\n    tasks: [],\n    members: [],\n    setError: () => {},\n    clearError: () => {},\n    setProject: () => {},\n    clearProject: () => {},\n    setTasks: () => {},\n    addTask: () => {},\n    updateProject: () => {},\n    setMembers: () => {}\n})\n\nexport default ProjectContext\n\nexport class ProjectProvider extends React.Component {\n    state = {\n        project: [],\n        tasks: [],\n        members: [],\n        error: null\n    }\n\n    setError = error => {\n        console.error(error)\n        this.setState({ error })\n    }\n    \n    clearError = () => {\n    this.setState({ error: null })\n    }\n\n    setProject = project => {\n    this.setState({project: project})\n    }\n\n    setTasks = tasks => {\n    this.setState({ tasks })\n    }\n    \n    setMembers = members => {\n    this.setState({ members })\n    }\n\n    clearProject = () => {\n    this.setProject({})\n    this.setTasks([])\n    this.setMembers([])\n    }\n\n    addTask = task => {\n    this.setTasks([\n        ...this.state.tasks,\n        task\n    ])\n    }\n\n    updateProject = project => {\n        this.setState({project: project})\n    }\n\n    render() {\n        const value = {\n            project: this.state.project,\n            tasks: this.state.tasks,\n            members: this.state.members,\n            error: this.state.error,\n            setError: this.setError,\n            clearError: this.clearError,\n            setProject: this.setProject,\n            setTasks: this.setTasks,\n            clearProject: this.clearProject,\n            addTask: this.addTask,\n            updateProject: this.updateProject,\n            setMembers: this.setMembers\n          }\n        return (\n            <ProjectContext.Provider value={value}>\n                {this.props.children}\n            </ProjectContext.Provider>\n        )\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './TaskListItem.css'\n\nexport default class TaskListItem extends React.Component {\n    render() {\n        const { task } = this.props\n        // add Complete Task button to the item so that it displays on the list\n        return (\n            <Link to={`/project/${task.project_id}/task/${task.id}`}>\n                <div className='TaskListItem'>\n                    {task.name}\n                </div>\n            </Link>\n        )\n    }\n}","import React from 'react'\nimport TaskListItem from '../TaskListItem/TaskListItem'\nimport ProjectContext from '../../contexts/ProjectContext';\nimport './TaskList.css'\n\nexport default class TaskList extends React.Component {\n    static contextType = ProjectContext\n\n    renderTasks() {\n        const taskList = this.props.tasks\n        return taskList.map(task => \n            <TaskListItem\n                key={task.id}\n                task={task}\n            />\n        )\n    }\n\n    render() {\n        const { error } = this.context\n        return (\n            <section className='TaskList'>\n            {error\n                ? <p className='red'>There was an error, try again</p>\n                : this.renderTasks()}\n            </section>\n        )\n    }\n}","import React from 'react'\nimport ProjectContext from '../../contexts/ProjectContext';\nimport './MemberList.css'\n\nexport default class MemberList extends React.Component {\n    static contextType = ProjectContext\n\n    renderMemberList() {\n        return \n    }\n\n    render() {\n        const memberList = this.context.members\n        return (\n            <div className='memberList'>\n                <p className='sub_header'>Project Members</p>\n                {memberList.length && memberList.map(member => {\n                    return <p className='member_item' key={member.id}>\n                        {member.first_name} {member.last_name}    \n                    </p>\n                })\n                }\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ProjectContext from '../contexts/ProjectContext'\nimport config from '../config'\nimport TokenService from '../services/token-service'\nimport TaskList from '../components/TaskList/TaskList'\nimport { Link } from 'react-router-dom'\nimport MemberList from '../components/MemberList/MemberList';\nimport './ProjectPage.css'\n\nexport default class ProjectPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      project_id: null\n    }\n  }\n  static contextType = ProjectContext\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.project_id !== this.props.match.params.project_id) {\n\n      const { project_id } = this.props.match.params\n      this.context.clearError()\n      Promise.all([\n        fetch(`${config.API_ENDPOINT}/projects/${project_id}`, {\n          method: 'GET',\n          headers: {\n            'authorization': `bearer ${TokenService.getAuthToken()}`,\n          }}),\n          fetch(`${config.API_ENDPOINT}/projects/${project_id}/tasks`, {\n            method: 'GET',\n            headers: {\n              'authorization': `bearer ${TokenService.getAuthToken()}`,\n            }}),\n            fetch(`${config.API_ENDPOINT}/projects/${project_id}/members`, {\n              method: 'GET',\n              headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n              }\n            })\n    ])\n  \n    .then(([res1, res2, res3]) => {\n      return Promise.all([res1.json(), res2.json(), res3.json()])\n    })\n    .then(([res1Json, res2Json, res3Json]) => {\n      this.context.setProject(res1Json)\n      this.context.setTasks(res2Json)\n      this.context.setMembers(res3Json)\n    })\n    .catch(this.context.setError)\n  }\n\n  }\n  componentDidMount() {\n    const { project_id } = this.props.match.params\n    this.context.clearError()\n    Promise.all([\n    fetch(`${config.API_ENDPOINT}/projects/${project_id}`, {\n      method: 'GET',\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      }}),\n    fetch(`${config.API_ENDPOINT}/projects/${project_id}/tasks`, {\n      method: 'GET',\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      }}),\n    fetch(`${config.API_ENDPOINT}/projects/${project_id}/members`, {\n      method: 'GET',\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n    ])\n  \n    .then(([res1, res2, res3]) => {\n      return Promise.all([res1.json(), res2.json(), res3.json()])\n    })\n    .then(([res1Json, res2Json, res3Json]) => {\n      this.context.setProject(res1Json)\n      this.context.setTasks(res2Json)\n      this.context.setMembers(res3Json)\n    })\n    .catch(this.context.setError)\n\n  }\n\n  render() {\n    const uncompletedTasks = this.context.tasks.filter(task => task.completed_by == null)\n    return (\n      <div>\n          <p className='page_header'>\n            {this.context.project.name}\n          </p>\n          <p className='page_description'>Description: {this.context.project.description}</p>\n          <Link to={`/project/${this.props.match.params.project_id}/edit`}>\n            <button className='edit_button'>\n              Edit Project\n            </button>\n          </Link>\n          \n          <Link to={`/project/${this.props.match.params.project_id}/create-task`}>\n            <button className='add_button'>\n              Add Task\n            </button>\n          </Link>\n          <p className='sub_header'>Open Tasks</p>\n          <TaskList tasks={uncompletedTasks} />\n          <MemberList />\n          <button onClick={() => this.props.history.goBack()} className='back_button'>\n            Back\n          </button>\n      </div>\n    )\n  }\n\n}\n","import React from 'react'\nimport ProjectContext from '../contexts/ProjectContext'\nimport config from '../config'\nimport TokenService from '../services/token-service'\nimport Moment from 'moment';\n\nexport default class TaskPage extends React.Component {\n  static contextType = ProjectContext\n    constructor(props) {\n        super(props)\n        this.state = {\n            error: null,\n            task_name: '',\n            task_description: '',\n            task_id: null,\n            task_due_date: '',\n            project_id: null,\n            created_by_id: null,\n            created_first_name: '',\n            created_last_name: '',\n            assigned_to_id: null, \n            assigned_to_first_name: null,\n            assigned_to_last_name: null,\n            date_completed: null,\n            completed_by_id: null,\n            completed_by_first_name: null,\n            completed_by_last_name: null,\n            formSaved: false,\n            formUpdated: false,\n            assignedTo: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({error: 'null'})\n        const { task_id } = this.props.match.params\n        fetch(`${config.API_ENDPOINT}/tasks/${task_id}`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n          )        \n        .then(resJson => {\n            const {task_name,\n            task_description,\n            task_id,\n            task_due_date,\n            project_id,\n            created_by_id,\n            created_first_name,\n            created_last_name,\n            assigned_to_id, \n            assigned_to_first_name,\n            assigned_to_last_name,\n            date_completed,\n            completed_by_id,\n            completed_by_first_name,\n            completed_by_last_name } = resJson\n\n            this.setState({\n                task_name,\n                task_description,\n                task_id,\n                task_due_date,\n                project_id,\n                created_by_id,\n                created_first_name,\n                created_last_name,\n                assigned_to_id, \n                assigned_to_first_name,\n                assigned_to_last_name,\n                date_completed,\n                completed_by_id,\n                completed_by_first_name,\n                completed_by_last_name,\n                assignedTo: `${assigned_to_first_name} ${assigned_to_last_name}`\n            })\n        })\n        .catch(this.setState({\n            error: 'Something went wrong'\n        }))\n    }\n\n    handleInputChange = e => {\n        const target = e.target\n        const value = target.value\n        const name = target.name\n        this.setState({\n            [name]: value,\n            formUpdated: true\n        })\n\n    }\n\n    handleChangeMember = e => {\n        const assignedTo = e.target.value\n        const memberObject = this.context.members.filter(member =>\n            assignedTo === (`${member.first_name} ${member.last_name}`)    \n        )\n        const { id, first_name, last_name } = memberObject[0]\n\n        this.setState({\n            assignedTo,\n            assigned_to_id: id,\n            assigned_to_first_name: first_name,\n            assigned_to_last_name: last_name,\n            formUpdated: true\n        })\n    }\n\n    handleSave = e => {\n        e.preventDefault()\n        const { task_name, task_description, task_due_date, assigned_to_id } = this.state\n        fetch(`${config.API_ENDPOINT}/tasks/${this.props.match.params.task_id}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({\n                name: task_name,\n                description: task_description, \n                due_date: task_due_date,\n                assigned_to: assigned_to_id\n            })\n        })\n        .then(this.fetchTasks)\n        .then(this.setState({formSaved: true}))\n    }\n\n    fetchTasks = () => {\n        fetch(`${config.API_ENDPOINT}/projects/${this.props.match.params.project_id}/tasks`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res => res.json())\n        .then(resJson => {\n            this.context.setTasks(resJson)\n        })\n        \n    }\n\n    handleCompleteTask = e => {\n        e.preventDefault()\n        fetch(`${config.API_ENDPOINT}/tasks/${this.props.match.params.task_id}/complete`, {\n            method: 'POST',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(this.fetchTasks)\n        .then(this.props.history.goBack())\n    }\n\n    renderComplete() {\n        const { date_completed,\n            completed_by_id,\n            completed_by_first_name,\n            completed_by_last_name } = this.state\n        return (\n            <div className='completed_details'>\n                <p>{completed_by_first_name} {completed_by_last_name} completed this task on {Moment(date_completed).format('MMMM Do YYYY')}</p>\n            </div>\n        )\n    }\n   \n    render() {\n        const { task,\n            task_name,\n            task_description,\n            task_id,\n            task_due_date,\n            project_id,\n            created_by_id,\n            created_first_name,\n            created_last_name,\n            assigned_to_id, \n            assigned_to_first_name,\n            assigned_to_last_name,\n            date_completed,\n            completed_by_id,\n            completed_by_first_name,\n            completed_by_last_name,\n            formUpdated,\n            assignedTo,\n            formSaved  } = this.state\n\n        return (\n            <section className='task-page'>\n                <form className='task_form' onSubmit={this.handleSave}>\n                    <p className='sub_header'>Task:</p>\n                    <input type='text' name='task_name' id='task_name' value={task_name} placeholder='Task' required onChange={this.handleInputChange}/>\n                    <p>Created by: {created_first_name} {created_last_name}</p>\n                    <label>\n                        Assigned To\n                        <select name='assigned_to' value={assignedTo} onChange={this.handleChangeMember}>\n                            <option value={null}>\n                                \n                            </option>\n                            {this.context.members.map(member => {\n                            return (\n                                <option key={member.id} value={`${member.first_name} ${member.last_name}`}>\n                                    {member.first_name} {member.last_name}\n                                </option>\n                            )\n\n                            })}\n                        </select>\n                    </label>\n\n                    <label>\n                        Due Date\n                        <input name='task_due_date' type='date' id='task_due_date' value={Moment(task_due_date).format('YYYY-MM-DD')} placeholder='Set Due Date' onChange={this.handleInputChange}/>\n                    </label>\n\n                    {formUpdated &&\n                    <button type='submit'>\n                        Save\n                    </button>\n                    }\n                </form>\n                {formSaved && <p className='saved_message'>Task saved</p>}\n                {completed_by_id && this.renderComplete()}\n                {!completed_by_id && <button className='add_button' onClick={this.handleCompleteTask}>\n                    Complete Task\n                </button>}\n                <button onClick={() => this.props.history.goBack()} className='back_button'>\n                    Back\n                </button>\n            </section>\n        )\n  }\n}\n","import React from 'react'\nimport './SideMenu.css'\nimport MenuContent from '../Common/MenuContent';\n\nexport default class SideMenu extends React.Component {\n  render() {\n    return (\n        <section className='side-menu'>\n            <MenuContent />\n        </section>\n    )\n  }\n}\n","import React from 'react'\nimport TokenService from '../../services/token-service'\nimport config from '../../config'\nimport ProjectContext from '../../contexts/ProjectContext';\n\nexport default class CreateTask extends React.Component {\n  static contextType = ProjectContext\n  constructor(props) {\n    super(props)\n    this.state = {\n      assignedTo: '',\n      assignedTo_id: null\n    }\n  }\n\n  handleCreateTask = e => {\n    e.preventDefault()\n    const { new_task_name, new_task_description, new_task_due_date, new_task_assigned_to } = e.target\n    const { project_id } = this.props.match.params\n    fetch(`${config.API_ENDPOINT}/tasks`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({\n        project_id: project_id,\n        name: new_task_name.value,\n        // description: new_task_description.value,\n        due_date: new_task_due_date.value,\n        assigned_to: this.state.assignedTo_id,\n      })\n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json()\n    )\n    .then(this.context.addTask)\n    .then(resJson => {\n      this.props.history.goBack()\n      return resJson\n    })\n    .catch(this.context.setError)\n  }\n\n  handleChangeMember =  e => {\n    const assignedTo = e.target.value\n    const memberObject = this.context.members.filter(member =>\n        assignedTo === (`${member.first_name} ${member.last_name}`)    \n    )\n    const { id } = memberObject[0]\n    this.setState({\n      assignedTo: assignedTo,\n      assignedTo_id: id\n    })\n  }\n\n  render() {\n    const { assignedTo } = this.state\n    return (\n      <section className='create-task'>\n        <p className='page_header'>Create Task</p>\n        <form className='task_form' onSubmit={this.handleCreateTask}>\n          <label>\n            Task Name:\n            <input type='text' id='new_task_name' name='new_task_name' placeholder='Name' required/>\n          </label>\n          {/* <label>\n            Description:\n            <input type='text' id='new_task_description' name='new_task_description' placeholder='Description'/>\n          </label> */}\n          <label>\n            Due Date:\n            <input type='date' id='new_task_due_date' name='new_task_due_date' placeholder='Due Date'/>\n          </label>\n          <label>\n            Assigned To:  \n            <select id='new_task_assigned_to' name='new_task_assigned_to' value={assignedTo} onChange={this.handleChangeMember}>\n                <option value={null}> \n                </option>\n                {this.context.members.map(member => {\n                  return (\n                      <option key={member.id} value={`${member.first_name} ${member.last_name}`}>\n                          {member.first_name} {member.last_name}\n                      </option>\n                  )\n                })}\n            </select>\n          </label>\n\n          <div className='buttons_container'>\n            <button type='submit' className='add_button'>\n              Add Task\n            </button>\n            <button onClick={() => this.props.history.goBack()} className='back_button'>\n                Back\n            </button>\n          </div>\n        \n        </form>\n      </section>\n    )\n  }\n  }\n\n\n","import React from 'react'\nimport config from '../../config'\nimport TokenService from '../../services/token-service'\n\nexport default class CreateProjectForm extends React.Component{\n    state = {\n        error: null,\n        errorProjectName: null\n    }\n\n    handleSubmitCreateProject = e => {\n        e.preventDefault()\n        const { project_name, project_description } = e.target\n        fetch(`${config.API_ENDPOINT}/projects`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            }\n            , body: JSON.stringify({\n                name: project_name.value,\n                description: project_description.value\n            })\n        })\n        .then(res => {\n            if (!res.ok) {\n                return res.status(400).setState({error: res.message})\n            }\n            this.props.history.goBack()\n        })\n    }\n\n    refreshError = () => {\n        this.setState({\n          error: null,\n          errorProjectName: null\n        })\n    }\n\n    render() {\n        return (\n            <form className='create_project_form' onSubmit={this.handleSubmitCreateProject}>\n                <label>\n                    Project Name\n                    <input type='text' name='project_name' id='project_name' onFocus={this.refreshError} placeholder='Project Name' required></input>\n                </label>\n                {this.state.errorProjectName && <p className=\"form_error\">{this.state.errorProjectName}</p>}\n                <label>\n                    Description\n                    <input type='text' name='project_description' id='project_description' placeholder='Description' required></input>\n                </label>\n                <button type='submit' className='submit_button'>Submit</button>\n            </form>\n        )\n    }\n}","import React from 'react'\nimport ProjectContext from '../../contexts/ProjectContext';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\n\nexport default class UpdateProject extends React.Component {\n    static contextType = ProjectContext\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            description: '',\n            error: null\n        }\n    }\n \n\n    componentDidMount() {\n        const { project_id } = this.props.match.params\n        fetch(`${config.API_ENDPOINT}/projects/${project_id}`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n        .then(resJson => {\n            this.setState({\n                name: resJson.name,\n                description: resJson.description\n            })\n        })\n        .catch(error => {\n            this.setState({error: 'Something went wrong'})\n        })\n    }\n        \n\n    handleUpdateProject = e => {\n        e.preventDefault()\n        const { project_id } = this.props.match.params\n        const { name, description } = this.state\n\n        fetch(`${config.API_ENDPOINT}/projects/${project_id}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description\n            })\n        })\n        // .then(res =>\n        //     (!res.ok)\n        //         ? res.json().then(e => Promise.reject(e))\n        //         : res.json()\n        // )\n        .then(() => {\n            this.context.updateProject({name, description})\n        })\n    }\n\n    handleChangeName = name => {\n        //controlled form\n        this.setState({name: name})\n    }\n\n    handleChangeDescription = description => {\n        // controlled form\n        this.setState({description: description})\n    }\n\n\n    render() {\n        const { name, description } = this.state\n        return (\n            <div className='update-project'>\n                <h1>Update Project</h1>\n                <form onSubmit={this.handleUpdateProject}>\n                    <label>\n                        Project Name\n                        <input id='name' name='name' placeholder='Project Name' value={name} required onChange={e => this.handleChangeName(e.target.value)}/>\n                    </label>\n                    <label>\n                        Description\n                        <input id='description' name='description' placeholder='Description' value={description} required onChange={e => this.handleChangeDescription(e.target.value)}/>\n                    </label>\n                    <div className='buttons_container'>\n                        <button type='submit' className='edit_button'>Update</button>\n                        <button onClick={() => this.props.history.goBack()} className='back_button'>\n                            Back\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport TaskList from '../TaskList/TaskList';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\n\nexport default class MyOpenTasks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            myOpenTasks: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/users/myopentasks`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n        )\n        .then(resJson => {\n            console.log(resJson)\n            this.setState({\n                myOpenTasks: resJson\n            })\n        })\n    }\n\n    render() {\n        const myOpenTasks = this.state.myOpenTasks\n        return (\n            <div className='tasklist'>\n                <p className='page_header'>\n                    My Open Tasks\n                </p>\n                <TaskList tasks={myOpenTasks} />\n                <button onClick={() => this.props.history.goBack()} className='back_button'>\n                    Back\n                </button>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport TaskList from '../TaskList/TaskList';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\n\nexport default class MyCreatedTasks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            myCreatedTasks: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/users/mycreatedtasks`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n        )\n        .then(resJson => {\n            console.log(resJson)\n            this.setState({\n                myCreatedTasks: resJson\n            })\n        })\n    }\n\n    render() {\n        const myCreatedTasks = this.state.myCreatedTasks\n        return (\n            <div className='tasklist'>\n                <p className='page_header'>\n                    My Created Tasks\n                </p>\n                <TaskList tasks={myCreatedTasks} />\n                <button onClick={() => this.props.history.goBack()} className='back_button'>\n                    Back\n                </button>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport TaskList from '../TaskList/TaskList';\nimport config from '../../config';\nimport TokenService from '../../services/token-service';\n\nexport default class MyCompletedTasks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            myCompletedTasks: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/users/mycompletedtasks`, {\n            method: 'GET',\n            headers: {\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n              ? res.json().then(e => Promise.reject(e))\n              : res.json()\n        )\n        .then(resJson => {\n            console.log(resJson)\n            this.setState({\n                myCompletedTasks: resJson\n            })\n        })\n    }\n\n    render() {\n        const myCompletedTasks = this.state.myCompletedTasks\n        return (\n            <div className='tasklist'>\n                <p className='page_header'>\n                    My Completed Tasks\n                </p>\n                <TaskList tasks={myCompletedTasks} />\n                <button onClick={() => this.props.history.goBack()} className='back_button'>\n                    Back\n                </button>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport HomePage from '../pages/HomePage'\nimport ProjectPage from '../pages/ProjectPage';\nimport TaskPage from '../pages/TaskPage';\nimport SideMenu from '../components/SideMenu/SideMenu';\nimport CreateTask from '../components/CreateTask/CreateTask'\nimport CreateProject from '../components/CreateProject/CreateProjectForm'\nimport UpdateProject from '../components/UpdateProject/UpdateProject';\nimport MyOpenTasks from '../components/Lists/MyOpenTasks';\nimport MyCreatedTasks from '../components/Lists/MyCreatedTasks';\nimport MyCompletedTasks from '../components/Lists/MyCompletedTasks';\nimport ('./PrivateRoutes.css')\n\nexport default class PrivateRoutes extends React.Component {\n    render() {\n        return (\n            <div className='main-container'>\n                <SideMenu/>\n                <div className='main-content'>\n                    <Switch>\n                        <Route path='/dashboard' component={HomePage}/>\n                        <Route exact path='/project-create' component={CreateProject}/>\n                        <Route exact path='/project/:project_id/' component={ProjectPage}/>\n                        <Route path='/project/:project_id/edit' component={UpdateProject}/>\n                        <Route path='/project/:project_id/task/:task_id' component={TaskPage}/>\n                        <Route path='/project/:project_id/create-task' component={CreateTask}/>\n                        <Route path='/lists/myopentasks' component={MyOpenTasks}/>\n                        <Route path='/lists/mycreatedtasks' component={MyCreatedTasks}/>\n                        <Route path='/lists/mycompletedtasks' component={MyCompletedTasks}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './LandingPage.css'\nimport landing_splash from '../Assets/landing_splash.jpg'\nimport { Link } from 'react-router-dom'\n\nexport default class LandingPage extends React.Component {\n  render() {\n    return (\n      <div className='landing_page'>\n        <div className='landing_page_text'>\n          <p className='page_header'>Manage your team's projects and tasks</p>\n          <p className='sub_header'>\n            <Link to='/register'>\n              <span className='langing_page_links'>Register a user</span>\n            </Link> and\n            <Link to='/login'>\n              <span className='langing_page_links'> login</span>\n            </Link>\n          </p>\n        </div>\n\n      </div>\n\n    )\n  }\n}\n","import React from 'react'\nimport './RegisterForm.css'\nimport config from '../../config'\n\nexport default class RegisterForm extends React.Component {\n  state = {\n    error: null,\n    errorPassword: null,\n    errorFirstName: null,\n    errorLastName: null,\n    errorEmail: null\n  }\n\n  validatePassword = (password) => {\n    this.setState({errorPassword: null})\n    let result = true\n    if(!password) {\n      this.setState({errorPassword: \"Password is required\"})\n      result = false\n    }\n    if (password.length < 8) {\n        this.setState({errorPassword: \"Password needs to be at least 8 characters\"})\n        result = false\n    }\n\n    if (password.length > 72) {\n        this.setState({errorPassword: \"Password needs to be less than 72 characters\"})\n        result = false\n    }\n\n    if (password.startsWith(' ') || password.endsWith(' ')) {\n      this.setState({errorPassword: 'Password must not start or end with empty spaces'})\n      result = false\n    }\n    if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&])[\\S]+/.test(password)) {\n      this.setState({errorPassword: 'Password must contain one upper case, lower case, number and special character'})\n      result = false\n    }\n\n    return result\n  }\n  \n    validateFirstName = (firstName) => {\n      let result = true\n  \n      if(!firstName) {\n          this.setState({errorFirstName: \"First Name is required\"})\n          result = false\n      }\n  \n      return result\n    }\n\n    validateLastName = (lastName) => {\n    let result = true\n  \n      if(!lastName) {\n          this.setState({errorLastName: \"Last Name is required\"})\n          result = false\n      }\n  \n      return result\n    }\n\n    validateEmail = (email) => {\n      let result = true\n      if (!email) {\n        this.setState({errorEmail: \"Email is required\"})\n        result = false\n      }\n\n      return result\n    }\n\n    validateConfirmPassword = (password, confirmPassword) => {\n      let result = true\n      if (password !== confirmPassword) {\n        this.setState({errorPassword: `Confirm Password does not match Password`})\n        result = false\n      }\n\n      return result\n    }\n\n  refreshError = () => {\n    this.setState({\n      error: null,\n      errorPassword: null,\n      errorFirstName: null,\n      errorLastName: null,\n      errorEmail: null\n    })\n  }\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    const { firstName, lastName, email, password, confirmPassword } = ev.target\n    if (!this.validateFirstName(firstName.value)) {\n      return\n    }\n    if (!this.validateLastName(lastName.value)) {\n      return\n    }\n    if (!this.validateEmail(email.value)) {\n      return\n    }\n    if (!this.validatePassword(password.value)) {\n      return\n    }\n\n    if (!this.validateConfirmPassword(password.value, confirmPassword.value)) {\n      return\n    }\n    this.setState({ error: null })\n    //submit to API\n    fetch(`${config.API_ENDPOINT}/users`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        first_name: firstName.value,\n        last_name: lastName.value,\n        email: email.value,\n        password: password.value,\n        })\n    })\n    .then(res => \n      (!res.ok) \n      ? res.json().then(e => Promise.reject(e)) \n      : res.json()\n    )\n    .then(user => {\n      firstName.value = ''\n      lastName.value = ''\n      email.value = ''\n      password.value = ''\n      confirmPassword.value = ''\n      this.props.history.push('/login')\n    })\n    .catch(res => {\n      this.setState({ error: res.error })\n    })\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n          <input type='text' name='firstName' id='firstName' onFocus={this.refreshError} placeholder='First Name' required></input>\n          {this.state.errorFirst && <p className=\"form-error\">{this.state.errorFirst}</p>}\n          <input type='text' name='lastName' id='lastName' onFocus={this.refreshError} placeholder='Last Name' required></input>\n          {this.state.errorLastName && <p className=\"form-error\">{this.state.errorLastName}</p>}\n          <input type='email' name='email' id='email' onFocus={this.refreshError} placeholder='Email' required></input>\n          {this.state.errorEmail && <p className=\"form-error\">{this.state.errorEmail}</p>}\n          <input type='password' name='password' id='password' onFocus={this.refreshError} placeholder='Password'></input>\n          {this.state.errorPassword && <p className=\"form-error\">{this.state.errorPassword}</p>}\n          <input type='password' name='confirmPassword' id='confirmPassword' onFocus={this.refreshError} placeholder='Confirm Password'></input>\n          <button className='add_button' type='submit'>Register</button>\n      </form>\n    )\n  }\n}\n","import React from 'react'\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\nexport default class RegisterPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h1>Register Page</h1>\n        <RegisterForm />\n      </>\n\n    )\n  }\n}\n","import React from 'react'\nimport config from '../../config'\nimport TokenService from '../../services/token-service'\nimport UserContext from '../../contexts/UserContext';\n\nexport default class LoginForm extends React.Component {\n  static contextType = UserContext\n\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  }\n\n  state = { \n    error: null \n  }\n\n  handleLogin = e => {\n    e.preventDefault()\n    this.setState({ error: null })\n    const { email, password } = e.target\n    fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value,\n      })\n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json()\n    )\n    .then(res => {\n      TokenService.saveAuthToken(res.authToken)\n      return res\n    })\n    .then(res => {\n      email.value = ''\n      password.value = ''\n      this.context.setUserLoggedInTrue()\n      this.props.onLoginSuccess()\n    })\n    .catch(res => {\n      this.setState({error: res.error})\n    })\n  }\n\n  demoUserLogin = () => {\n    fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: 'test2@test.com',\n        password: 'P@ssw0rd',\n      })\n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => Promise.reject(e))\n        : res.json()\n    )\n    .then(res => {\n      TokenService.saveAuthToken(res.authToken)\n      return res\n    })\n    .then(res => {\n      this.context.setUserLoggedInTrue()\n      this.props.onLoginSuccess()\n    })\n    .catch(res => {\n      this.setState({error: res.error})\n    })\n  }\n\n\n  render() {\n    const { error } = this.state\n    return (\n      <form onSubmit={this.handleLogin}>\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <input type='text' name='email' id='email' placeholder='Email'></input>\n        <input type='password' name='password' id='password' placeholder='Password'></input>\n        <button className='add_button' type='submit'>Login</button>\n        <button className='add_button' onClick={this.demoUserLogin}>\n          Demo User\n        </button>\n      </form>\n    )\n  }\n}\n","import React from 'react'\nimport LoginForm from '../components/LoginForm/LoginForm'\n\nexport default class LoginPage extends React.Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/dashboard'\n    history.push(destination)\n  }\n\n  render() {\n    return (\n      <section className='LoginPage'>\n        <h1>Login Page</h1>\n        <LoginForm onLoginSuccess={this.handleLoginSuccess}/>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport LandingPage from '../pages/LandingPage';\nimport RegisterPage from '../pages/RegisterPage';\nimport LoginPage from '../pages/LoginPage';\n\nexport default class PublicRoutes extends React.Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route exact path='/' component={LandingPage}/>\n                    <Route path='/login' component={LoginPage}/>\n                    <Route path='/register' component={RegisterPage}/>\n                </Switch>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../services/token-service'\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Redirect to={'/dashboard'} />\n          : <Component {...componentProps} />\n      )}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Footer from './components/Common/Footer'\nimport Header from './components/Common/Header'\nimport PrivateOnlyRoute from './Routes/PrivateOnlyRoute'\nimport  './App.css';\nimport PrivateRoutes from './Routes/PrivateRoutes';\nimport PublicRoutes from './Routes/PublicRoutes';\nimport PublicOnlyRoute from './Routes/PublicOnlyRoute';\n\nclass App extends Component {\n  hideSideMenu() {\n    return ['/login', '/register', '/'].includes(window.location.pathname)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />  \n          <Switch>\n            <PrivateOnlyRoute path='/dashboard' component={PrivateRoutes}/>\n            <PrivateOnlyRoute path='/project' component={PrivateRoutes}/>\n            <PrivateOnlyRoute path='/project-create' component={PrivateRoutes}/>\n            <PrivateOnlyRoute path='/lists' component={PrivateRoutes}/>\n            <PublicOnlyRoute path='/login' component={PublicRoutes}/>\n            <PublicOnlyRoute path='/register' component={PublicRoutes}/>\n            <PublicOnlyRoute exact path='/' component={PublicRoutes}/>\n          </Switch>\n        <Footer/> \n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\nimport { ProjectProvider } from './contexts/ProjectContext'\nimport { ProjectListProvider } from './contexts/ProjectListContext'\nimport { UserProvider } from './contexts/UserContext'\n\nReactDOM.render(\n    <BrowserRouter>\n        <UserProvider>\n            <ProjectListProvider>\n                <ProjectProvider>\n                    <App />\n                </ProjectProvider>\n            </ProjectListProvider>\n        </UserProvider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}